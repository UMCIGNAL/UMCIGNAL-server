name: deploy-main

on:
  push:
    branches:
      - dev
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2  # 이전 커밋도 가져오기 위해 설정

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'   # npm 캐시 활성화

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          cat > ~/.ssh/config << EOF
          Host playground-umc-7th
            HostName ${{ secrets.EC2_HOST }}
            User ubuntu
            IdentityFile ~/.ssh/id_rsa
            StrictHostKeyChecking no
            UserKnownHostsFile /dev/null
            LogLevel ERROR
          EOF

      - name: Test SSH Connection
        run: |
          ssh -vvv playground-umc-7th "echo '✅ SSH Connection Successful'"

      - name: Check for package.json changes
        id: check-package
        run: |
          CHANGED=$(git diff HEAD^1 --name-only | grep "package.json" || echo "")
          echo "::set-output name=changed::${CHANGED}"

      - name: Get package-lock.json hash
        id: package-lock-hash
        run: |
          if ssh playground-umc-7th "test -f /home/ubuntu/UMCIGNAL-server/package-lock.json"; then
            REMOTE_HASH=$(ssh playground-umc-7th "md5sum /home/ubuntu/UMCIGNAL-server/package-lock.json | cut -d' ' -f1")
            LOCAL_HASH=$(md5sum package-lock.json | cut -d' ' -f1)
            if [ "$REMOTE_HASH" != "$LOCAL_HASH" ]; then
              echo "::set-output name=changed::true"
            else
              echo "::set-output name=changed::false"
            fi
          else
            echo "::set-output name=changed::true"
          fi

      - name: Sync Changed Files
        run: |
          ssh playground-umc-7th 'mkdir -p /home/ubuntu/UMCIGNAL-server'
          git diff --name-only HEAD^1 HEAD | while read file; do
            if [ -f "$file" ]; then
              rsync -avz --relative "$file" playground-umc-7th:/home/ubuntu/UMCIGNAL-server/
            fi
          done

      - name: Install Dependencies if needed
        if: steps.check-package.outputs.changed != '' || steps.package-lock-hash.outputs.changed == 'true'
        run: |
          ssh playground-umc-7th '
            cd /home/ubuntu/UMCIGNAL-server
            npm ci  # clean install, 기존 node_modules는 삭제하고 다시 설치
          '

      - name: Create or Update .env file
        run: |
            ssh playground-umc-7th 'cat > /home/ubuntu/UMCIGNAL-server/.env << EOF
            DATABASE_HOST=${{ secrets.DATABASE_HOST }}
            DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }}
            DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}
            DATABASE_NAME=${{ secrets.DATABASE_NAME }}
            DATABASE_PORT=${{ secrets.DATABASE_PORT }}
        
            SSH_HOST=${{ secrets.SSH_HOST }}
            SSH_USER=${{ secrets.SSH_USER }}
            SSH_KEY_PATH=${{ secrets.SSH_KEY_PATH }}
            SSH_DATABASE_HOST=${{ secrets.SSH_DATABASE_HOST }}
            SSH_DATABASE_PORT=${{ secrets.SSH_DATABASE_PORT }}
        
            PORT=${{ secrets.PORT }}
            EMAIL_SECURITY=${{ secrets.EMAIL_SECURITY }}
            EMAIL_ADDRESS=${{ secrets.EMAIL_ADDRESS }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            EOF'

      - name: Fix npm permissions and install pm2
        run: |
          ssh playground-umc-7th '
            mkdir -p ~/.npm-global
            npm config set prefix ~/.npm-global
            echo "export PATH=$PATH:~/.npm-global/bin" >> ~/.bashrc
            source ~/.bashrc
            npm install -g pm2
          '

      - name: Restart Application with pm2
        run: |
          ssh playground-umc-7th '
            cd /home/ubuntu/UMCIGNAL-server
            if pgrep node; then
              pkill node
              sleep 5
            fi
            pm2 start npm --name "umcignal-server" -- run dev
          '

      - name: Check if Application is Running with pm2
        run: |
          ssh playground-umc-7th '
            sleep 10
            if pm2 list | grep "umcignal-server" | grep -q "online"; then
              echo "✅ Application is running."
            else
              echo "❌ Application failed to start."
              pm2 logs umcignal-server
              exit 1
            fi
          '
